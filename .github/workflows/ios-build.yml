name: iOS Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    name: Build iOS App
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Setup Bun
        uses: oven-sh/setup-bun@main
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Install CocoaPods
        run: |
          sudo gem install cocoapods
          
      - name: Cache CocoaPods
        uses: actions/cache@v4
        with:
          path: ios/Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-

      - name: Generate iOS project
        run: |
          bunx expo prebuild --platform ios --clean

      - name: Install Pod dependencies
        run: |
          cd ios
          pod install

      - name: Build iOS app
        run: |
          cd ios
          xcodebuild -workspace rn-reusable-sample.xcworkspace -scheme rn-reusable-sample -configuration Release -archivePath ./build/app.xcarchive archive CODE_SIGNING_ALLOWED=NO
          xcodebuild -exportArchive -archivePath ./build/app.xcarchive -exportOptionsPlist ../exportOptions.plist -exportPath ./build || true
          
      - name: Create exportOptions.plist if not exists
        run: |
          if [ ! -f "exportOptions.plist" ]; then
            echo "Creating exportOptions.plist file"
            cat > exportOptions.plist << EOF
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
              <key>method</key>
              <string>development</string>
              <key>teamID</key>
              <string>YOUR_TEAM_ID</string>
              <key>signingStyle</key>
              <string>automatic</string>
          </dict>
          </plist>
          EOF
            
            cd ios
            xcodebuild -exportArchive -archivePath ./build/app.xcarchive -exportOptionsPlist ../exportOptions.plist -exportPath ./build || true
          fi

      - name: Find IPA files
        id: find-ipa
        run: |
          echo "Finding IPA files..."
          find . -name "*.ipa" -type f | tee ipa-files.txt
          echo "IPA files found:"
          cat ipa-files.txt

      - name: Create IPA from archive if no IPA found
        if: ${{ contains(steps.find-ipa.outputs.stdout, 'No such file') }}
        run: |
          cd ios/build
          mkdir -p Payload
          cp -r app.xcarchive/Products/Applications/rn-reusable-sample.app Payload/
          zip -r rn-reusable-sample.ipa Payload
          rm -rf Payload

      - name: Upload IPA artifact
        uses: actions/upload-artifact@v4
        with:
          name: ios-app
          path: |
            ./ios/build/*.ipa
            ./ios/build/app.xcarchive/Products/Applications/*.app
          retention-days: 7
